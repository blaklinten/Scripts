#!/bin/bash


#Check what machine is running
case "$(uname -n)" in
	"x1-carbon")
		T_NAME="Synaptics TM3072-003"
		;;
	"dubian")
		T_NAME="AlpsPS/2 ALPS GlidePoint"	
		;; 
	"elx781653y4")
		T_NAME="ALP0018:00 044E:121B Touchpad"
		;;
esac

xinput --set-prop "$T_NAME" "libinput Tapping Enabled" 1
xinput --set-prop "$T_NAME" "libinput Natural Scrolling Enabled" 1

State=$(xinput list-props "$T_NAME" | grep "Device Enabled" | tail -c 2)

if [[ $State == "0" ]]
then
	xinput set-prop "$T_NAME" "Device Enabled" 1
	pkill unclutter
elif [[ $State == "1" ]]
then
	xinput set-prop "$T_NAME" "Device Enabled" 0
	unclutter -idle 0 -jitter 10 -root &
	# Find what screen(s) are present
	INTERNAL_SCREEN=$(xrandr|grep "primary"|cut -d " " -f 1)
	EXTERNAL_SCREEN=$(xrandr|grep " connected"|grep -v "primary"|cut -d " " -f 1)

	if [ -n "$EXTERNAL_SCREEN" ]; then
		CENTER_X=$(expr "$(xrandr | grep "$EXTERNAL_SCREEN" | cut -d " " -f 3 | cut -d "+" -f 1 | cut -d "x" -f 1)" / 2)
		CENTER_Y=$(expr "$(xrandr | grep "$EXTERNAL_SCREEN" | cut -d " " -f 3 | cut -d "+" -f 1 | cut -d "x" -f 2)" / 2)
	else
		CENTER_X=$(expr "$(xrandr | grep "$INTERNAL_SCREEN" | cut -d " " -f 4 | cut -d "+" -f 1 | cut -d "x" -f 1)" / 2)
		CENTER_Y=$(expr "$(xrandr | grep "$INTERNAL_SCREEN" | cut -d " " -f 4 | cut -d "+" -f 1 | cut -d "x" -f 2)" / 2)
	fi
	xdotool mousemove $CENTER_X $CENTER_Y
fi
